# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]

defaults:
 run:
  working-directory: ./tests

env:
  SERVER_PORT: ${{ vars.SERVER_PORT }}
  SERVER_TIMEOUT: ${{ vars.SERVER_TIMEOUT }}
  GO_ENV: ${{ vars.GO_ENV }}
  TOKEN_EXPIRE: ${{ vars.TOKEN_EXPIRE }}
  TOKEN_ISSUER: ${{ vars.TOKEN_ISSUER }}
  SERVER_PUBLIC_KEY: ${{ vars.SERVER_PUBLIC_KEY }}
  SERVER_PRIVATE_KEY: ${{ vars.SERVER_PRIVATE_KEY }}
  CLIENT_KEY: ${{ vars.CLIENT_KEY }}
  CLIENT_SECRET: ${{ vars.CLIENT_SECRET }}
  CLIENT_PUBLIC_KEY: ${{ vars.CLIENT_PUBLIC_KEY }}
  MYSQL_HOST: ${{ vars.MYSQL_HOST }}
  MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
  MYSQL_USER: ${{ vars.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
  MYSQL_MIN_POOL: ${{ vars.MYSQL_MIN_POOL }}
  MYSQL_MAX_POOL: ${{ vars.MYSQL_MAX_POOL }}

jobs:
  job1:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        volumes:
          - databases:/var/lib/mysql
          - ./scripts/db_init:/docker-entrypoint-initdb.d/:ro
        env:
          MYSQL_ROOT_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: --user root --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'

    - name: Unit test
      run: go test -v -count=1

  job2:
    needs: job1
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'

    - name: Build
      run: go build -v ./...
